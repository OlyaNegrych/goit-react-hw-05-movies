{"version":3,"file":"static/js/186.a9d0ac89.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAyBF,GAAzB,iGAE6BG,EAAAA,EAAAA,IAAeH,GAF5C,OAEUI,EAFV,OAGIL,EAAUK,GAHd,gDAKIC,QAAQC,IAAR,MALJ,yDADc,yBAAC,SAAD,2BASdC,CAAUP,EACX,GAAE,CAACA,IAEJK,QAAQC,IAAIR,GAEPA,GAKH,0BACqB,IAAlBA,EAAOU,SAAgB,qEACvBV,EAAOW,KAAI,SAAAC,GAAI,OACd,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GADA,OANX,IAcV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsById } from '../../services/API';\n\nconst Reviews = () => {\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReview(movieId) {\n      try {\n        const reviewList = await getReviewsById(movieId);\n        setReview(reviewList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReview(movieId);\n  }, [movieId]);\n\n  console.log(review);\n\n  if (!review) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {review.length === 0 && <p>We don't have any reviews for this movie.</p>}\n      {review.map(item => (\n        <li key={item.id}>\n          <h3>Author: {item.author}</h3>\n          <p>{item.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","review","setReview","movieId","useParams","useEffect","getReviewsById","reviewList","console","log","getReview","length","map","item","author","content","id"],"sourceRoot":""}