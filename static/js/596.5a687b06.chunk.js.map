{"version":3,"file":"static/js/596.5a687b06.chunk.js","mappings":"+PAwBA,EAvByB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAClBC,EAASD,EAAMC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,IAEvC,OACE,4BACE,gBACEC,IAAG,yCAAoCL,EAAMM,eAC7CC,IAAKP,EAAMI,QAEb,4BACE,0BACGJ,EAAMQ,eADT,IAC0BR,EAAMS,aAAaC,MAAM,IAAIC,OAAO,EAAG,GADjE,QAGA,yCAA8C,GAA7BC,OAAOZ,EAAMa,eAAoBC,QAAQ,GAA1D,QACA,sCACA,uBAAId,EAAMe,YACV,oCACA,uBAAId,SAIX,E,kBCoCD,EAnDqB,WAAO,IAAD,EACjBe,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACsBC,EAAAA,EAAAA,IAAaP,GADnC,OACQhB,EADR,OAEEmB,EAASnB,GAFX,2CADc,yBAAC,WAAD,wBAKdwB,EACD,GAAE,CAACR,KAEChB,EACH,OAAO,KAGT,IAAMyB,EAAQ,UAAGL,EAASM,aAAZ,aAAG,EAAgBC,KAEjC,OACE,6BACE,4BACE,4BACE,SAAC,MAAD,IADF,KACsB,SAAC,KAAD,CAAMC,GAAIH,EAAV,yBAGtB,SAAC,EAAD,CAAkBzB,MAAOA,QAG3B,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM4B,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMG,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAlC,6BAMN,SAAC,EAAAI,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.jsx"],"sourcesContent":["\nconst MovieDescription = ({ movie }) => {\n    const genres = movie.genres.map(genre => genre.name + ' ');\n\n  return (\n    <div>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n        alt={movie.name}\n      />\n      <div>\n        <h2>\n          {movie.original_title}({movie.release_date.split('').splice(0, 4)})\n        </h2>\n        <p>User score: {(Number(movie.vote_average) * 10).toFixed(0)}%</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDescription;\n","import { Outlet, useParams, Link } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\nimport { getMovieById } from '../services/API';\nimport { BsFillReplyFill } from 'react-icons/bs';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieInfo() {\n      const movie = await getMovieById(movieId);\n      setMovie(movie);\n    }\n    getMovieInfo();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const backLink = location.state?.from;\n\n  return (\n    <main>\n      <div>\n        <div>\n          <BsFillReplyFill /> <Link to={backLink}>Go back</Link>\n        </div>\n\n        <MovieDescription movie={movie} />\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLink }}>\n              Review\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movie","genres","map","genre","name","src","backdrop_path","alt","original_title","release_date","split","splice","Number","vote_average","toFixed","overview","movieId","useParams","useState","setMovie","location","useLocation","useEffect","getMovieById","getMovieInfo","backLink","state","from","to","Suspense","fallback"],"sourceRoot":""}